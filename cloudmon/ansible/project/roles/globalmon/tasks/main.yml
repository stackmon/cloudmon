---
# tasks file for globalmon

- name: Include variables
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files: "{{ distro_lookup_path }}"
      paths:
        - "vars"

# - name: Install required packages
#   become: true
#   ansible.builtin.package:
#     state: present
#     name: "{{ item }}"
#   loop:
#     - "{{ packages }}"
#   when: "ansible_facts.pkg_mgr != 'atomic_container'"
#   register: task_result
#   until: task_result is success
#   retries: 5

# - name: Create globalmon group
#   become: true
#   ansible.builtin.group:
#     name: "{{ globalmon_os_group }}"
#     state: "present"

# - name: Create globalmon user
#   become: true
#   ansible.builtin.user:
#     name: "{{ globalmon_os_user }}"
#     group: "{{ globalmon_os_group }}"
#     groups: "{{ (container_command == 'docker') | ternary('docker', '', omit) }}"
#     state: "present"

- name: Write globalmon SystemD unit file
  become: true
  ansible.builtin.template:
    src: "globalmon.service.j2"
    dest: "{{ globalmon_systemd_unit_path }}"
  notify:
    - Restart globalmon

- name: Create required directories
  become: true
  ansible.builtin.file:
    dest: "{{ item.dest }}"
    state: "directory"
    # owner: "{{ globalmon_os_user }}"
    # group: "{{ globalmon_os_group }}"
    mode: "{{ item.mode | default(omit) }}"
  loop:
    - { dest: "{{ globalmon_config_dir }}", mode: "0755" }

- name: Write env
  become: true
  ansible.builtin.template:
    src: "env_globalmon"
    dest: "{{ globalmon_env_path }}"
    # owner: "{{ globalmon_os_user }}"
    # group: "{{ globalmon_os_group }}"
    mode: "0644"
  notify:
    - Restart globalmon

- name: Write globalmon config
  become: true
  ansible.builtin.copy:
    content: "{{ globalmon_config | to_nice_yaml(indent=2, width=79) }}"
    dest: "{{ globalmon_config_path }}"
    # group: "{{ globalmon_os_group }}"
    # owner: "{{ globalmon_os_user }}"
    mode: "0644"
  when:
    - "globalmon_config is defined"
  notify:
    - Restart globalmon

- name: Write globalmon secure config
  become: true
  ansible.builtin.copy:
    content: "{{ globalmon_secure_config | to_nice_yaml(indent=2, width=79) }}"
    dest: "{{ globalmon_secure_config_path }}"
    # group: "{{ globalmon_os_group }}"
    # owner: "{{ globalmon_os_user }}"
    mode: "0644"
  when:
    - "globalmon_secure_config is defined"
  notify:
    - Restart globalmon
